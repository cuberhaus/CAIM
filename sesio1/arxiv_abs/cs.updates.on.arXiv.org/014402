Automatic Programming is one of the most important areas of computer science research today. Hardware
speed and capability have increased exponentially, but the software is years behind. The demand
for software has also increased significantly, but it is still written in old fashion: by using humans.
There are multiple problems when the work is done by humans: cost, time, quality. It is costly to pay
humans, it is hard to keep them satisfied for a long time, it takes a lot of time to teach and train them
and the quality of their output is in most cases low (in software, mostly due to bugs). The real advances
in human civilization appeared during the industrial revolutions. Before the first revolution,
most people worked in agriculture. Today, very few percent of people work in this field. A similar
revolution must appear in the computer programming field. Otherwise, we will have so many people
working in this field as we had in the past working in agriculture. How do people know how to write computer
programs? Very simple: by learning. Can we do the same for software? Can we put the software to learn
how to write software? It seems that is possible (to some degree) and the term is called Machine Learning.
It was first coined in 1959 by the first person who made a computer perform a serious learning task,
namely, Arthur Samuel. However, things are not so easy as in humans (well, truth to be said - for some
humans it is impossible to learn how to write software). So far we do not have software that can learn
perfectly to write software. We have some particular cases where some programs do better than humans,
but the examples are sporadic at best. Learning from experience is difficult for computer programs.
Instead of trying to simulate how humans teach humans how to write computer programs, we can simulate
nature. 