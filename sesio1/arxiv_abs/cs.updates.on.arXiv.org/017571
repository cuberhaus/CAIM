Along the design process of interactive system many intermediate artefacts (such as user interface
prototypes, task models describing user work and activities, dialog models specifying system
behavior, interaction models describing user interactions {\ldots}) are created, tested, revised
and improved until the development team produces a validated version of the full-fledged system.
Indeed, to build interactive systems there is a need to use multiple artefacts/models (as they provide
a complementary view). However, relevant information for describing the design solution and/or
supporting design decisions (such as rational about the design, decisions made, recommendations,
etc.) is not explicitly capturable in the models/artefacts, hence the need for annotations. Multi-artefacts
approaches usually argue that a given information should only be present in one artefact to avoid
duplication and increase maintainability of the artefacts. Nonetheless, annotations created
on one artefact are usually relevant to other artefacts/models. So that, there is a need for tools
and techniques to coordinate annotations across artefacts/models which is the contribution of
the present work. In this paper, we propose a model-based approach that was conceived to handle annotations
in a systematic way along the development process of interactive systems. As part of the solution,
we propose an annotation model built upon the W3C's Web Annotation Data Model. The feasibility of
the approach is demonstrated by means of a tool suite featuring a plugin, which has been deployed
and tested over the multi-artefacts. The overall approach is illustrated on the design of an interactive
cockpit application performing two design iterations. The contribution brings two main benefits
for interactive systems engineering: i) it presents a generic pattern for integrating information
in multiple usually heterogenous artefacts throughout the design process of interactive systems;
and ii) it highlights the need for tools helping to rationalize and to document the various artefacts
and the related decisions made during interactive systems design. CCS CONCEPTS $\bullet$ Human-centered
computing $\bullet$ Human computer interaction (HCI) 