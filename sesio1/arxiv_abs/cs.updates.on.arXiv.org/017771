The design of complex man-made systems mostly involves a conceptual modeling phase; therefore,
it is important to ensure an appropriate analysis method for these models. A key concept for such
analysis is the development of a diagramming technique (e.g., UML) because diagrams can describe
entities and processes and emphasize important aspects of the systems being described. The analysis
also includes an examination of ontological concepts such as states and events, which are used as
a basis for the modeling process. Studying fundamental concepts allows us to understand more deeply
the relationship between these concepts and modeling frameworks. In this paper, we critically
analyze the classic definition of a state utilizing the thinging machine (TM) model. States in state
machine diagrams are considered the appropriate basis for modeling system behavioral aspects.
Despite its wide application in hardware design, the integration of a state machine model into a
software system s modeling requirements increased the difficulty of graphical representation
(e.g., integration between structural and behavioral diagrams). To understand such a problem,
in this paper, we project (create an equivalent representation of) states in TM machines. As a case
study, we re-modeled a state machine of an assembly line system in a TM. The outcome is a complicated
picture of assembly line behavior. Therefore, as an alternative solution, we re-modeled the assembly
line based solely on the TM. This new model presents a clear contrast between state-based modeling
of assembly line behavior and the TM approach. The TM modeling seems more systematic than its counterpart,
the state machine, and its notions are well defined. In a TM, states are just compound events. A model
of a more complex system than the one in the assembly line has strengthened such a conclusion. 