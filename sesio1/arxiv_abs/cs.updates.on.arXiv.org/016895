As a pivotal tool to alleviate the information overload problem, recommender systems aim to predict
user's preferred items from millions of candidates by analyzing observed user-item relations.
As for alleviating the sparsity and cold start problems encountered by recommender systems, researchers
resort to employing side information or knowledge in recommendation as a strategy for uncovering
hidden (indirect) user-item relations, aiming to enrich observed information (or data) for recommendation.
However, in the face of the high complexity and large scale of side information and knowledge, this
strategy relies for efficient implementation on the scalability of recommendation models. Not
until after the prevalence of machine learning did graph embedding techniques be a concentration,
which can efficiently utilize complex and large-scale data. In light of that, equipping recommender
systems with graph embedding techniques has been widely studied these years, appearing to outperform
conventional recommendation implemented directly based on graph topological analysis. As the
focus, this article retrospects graph embedding-based recommendation from embedding techniques
for bipartite graphs, general graphs and knowledge graphs, and proposes a general design pipeline
of that. In addition, after comparing several representative graph embedding-based recommendation
models with the most common-used conventional recommendation models on simulations, this article
manifests that the conventional models can overall outperform the graph embedding-based ones
in predicting implicit user-item interactions, revealing the comparative weakness of graph embedding-based
recommendation in these tasks. To foster future research, this article proposes suggestions on
making a trade-off between graph embedding-based recommendation and conventional recommendation
in different tasks, and puts forward open questions. 