Refactoring is widely recognized as one of the efficient techniques to manage technical debt and
maintain a healthy software project through enforcing best design practices or coping with design
defects. Previous refactoring surveys have shown that code refactoring activities are mainly
executed by developers who have sufficient knowledge of the system's design and disposing of leadership
roles in their development teams. However, these surveys were mainly limited to specific projects
and companies. In this paper, we explore the generalizability of the previous results by analyzing
800 open-source projects. We mine their refactoring activities, and we identify their corresponding
contributors. Then, we associate an experience score to each contributor in order to test various
hypotheses related to whether developers with higher scores tend to 1) perform a higher number of
refactoring operations 2) exhibit different motivations behind their refactoring, and 3) better
document their refactoring activity. We found that (1) although refactoring is not restricted
to a subset of developers, those with higher contribution scores tend to perform more refactorings
than others; (2) while there is no correlation between experience and motivation behind refactoring,
top contributed developers are found to perform a wider variety of refactoring operations, regardless
of their complexity; and (3) top contributed developer tend to document less their refactoring
activity. Our qualitative analysis of three randomly sampled projects shows that the developers
who are responsible for the majority of refactoring activities are typically in advanced positions
in their development teams, demonstrating their extensive knowledge of the design of the systems
they contribute to. 