(Source) Code summarization aims to automatically generate summaries/comments for a given code
snippet in the form of natural language. Such summaries play a key role in helping developers understand
and maintain source code. Existing code summarization techniques can be categorized into extractive
methods and abstractive methods. The extractive methods extract a subset of important statements
and keywords from the code snippet using retrieval techniques, and generate a summary that preserves
factual details in important statements and keywords. However, such a subset may miss identifier
or entity naming, and consequently, the naturalness of generated summary is usually poor. The abstractive
methods can generate human-written-like summaries leveraging encoder-decoder models from the
neural machine translation domain. The generated summaries however often miss important factual
details. To generate human-written-like summaries with preserved factual details, we propose
a novel extractive-and-abstractive framework. The extractive module in the framework performs
a task of extractive code summarization, which takes in the code snippet and predicts important
statements containing key factual details. The abstractive module in the framework performs a
task of abstractive code summarization, which takes in the entire code snippet and important statements
in parallel and generates a succinct and human-written-like natural language summary. We evaluate
the effectiveness of our technique, called EACS, by conducting extensive experiments on three
datasets involving six programming languages. Experimental results show that EACS significantly
outperforms state-of-the-art techniques in terms of all three widely used metrics, including
BLEU, METEOR, and ROUGH-L. 