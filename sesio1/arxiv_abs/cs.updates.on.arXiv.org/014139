Developing sustainable scientific software for the needs of the scientific community requires
expertise in both software engineering and domain science. This can be challenging due to the unique
needs of scientific software, the insufficient resources for modern software engineering practices
in the scientific community, and the complexity of evolving scientific contexts for developers.
These difficulties can be reduced if scientists and developers collaborate. We present a case study
wherein scientists from the SuperNova Early Warning System collaborated with software developers
from the Scalable Cyberinfrastructure for Multi-Messenger Astrophysics project. The collaboration
addressed the difficulties of scientific software development, but presented additional risks
to each team. For the scientists, there was a concern of relying on external systems and lacking control
in the development process. For the developers, there was a risk in supporting the needs of an user-group
while maintaining core development. We mitigated these issues by utilizing an Agile Scrum framework
to orchestrate the collaboration. This promoted communication and cooperation, ensuring that
the scientists had an active role in development while allowing the developers to quickly evaluate
and implement the scientists' software requirements. While each system was still in an early stage,
the collaboration provided benefits for each group: the scientists kick-started their development
by using an existing platform, and the developers utilized the scientists' use-case to improve
their systems. This case study suggests that scientists and software developers can avoid some
difficulties of scientific computing by collaborating and can address emergent concerns using
Agile Scrum methods. 