Given a massive graph, how can we exploit its hierarchical structure for concisely but exactly summarizing
the graph? By exploiting the structure, can we achieve better compression rates than state-of-the-art
graph summarization methods? The explosive proliferation of the Web has accelerated the emergence
of large graphs, such as online social networks and hyperlink networks. Consequently, graph compression
has become increasingly important to process such large graphs without expensive I/O over the network
or to disk. Among a number of approaches, graph summarization, which in essence combines similar
nodes into a supernode and describe their connectivity concisely, protrudes with several advantages.
However, we note that it fails to exploit pervasive hierarchical structures of real-world graphs
as its underlying representation model enforces supernodes to be disjoint. In this work, we propose
the hierarchical graph summarization model, which is an expressive graph representation model
that includes the previous one proposed by Navlakha et al. as a special case. The new model represents
an unweighted graph using positive and negative edges between hierarchical supernodes, each of
which can contain others. Then, we propose Slugger, a scalable heuristic for concisely and exactly
representing a given graph under our new model. Slugger greedily merges nodes into supernodes while
maintaining and exploiting their hierarchy, which is later pruned. Slugger significantly accelerates
this process by sampling, approximation, and memoization. Our experiments on 16 real-world graphs
show that Slugger is (a) Effective: yielding up to 29.6% more concise summary than state-of-the-art
lossless summarization methods, (b) Fast: summarizing a graph with 0.8 billion edges in a few hours,
and (c) Scalable: scaling linearly with the number of edges in the input graph. 